{"version":3,"sources":["Components/Cards/Cards.module.css","Components/Cards/Cards.jsx","api/index.js","Components/Charts/Chart.jsx","Components/CountryPicker/CountryPicker.jsx","App.js","index.js","App.module.css","Components/Charts/Chart.module.css","Components/CountryPicker/CountryPicker.module.css","Images/image.png"],"names":["module","exports","Cards","props","console","log","data","confirmed","recovered","deaths","lastUpdate","className","styles","container","Grid","spacing","justify","item","xs","md","Card","cx","card","infected","CardContent","Typography","color","gutterBottom","variant","start","end","value","duration","seprator","moment","calendar","toString","component","url","fetchData","country","a","changeAbleUrl","axios","get","then","resp","catch","err","response","fetchDailyData","modifiedData","map","dailyData","total","date","reportDate","fetchCountries","countries","name","Chart","useState","setdailyData","useEffect","fetchApi","lineChart","length","labels","datasets","label","borderColor","fill","backgroundColor","barChart","options","legend","display","title","text","CountryPicker","handleCountryChange","FetchedCountries","setFetchedCountries","FormControl","formControl","NativeSelect","defaultValue","onChange","e","target","i","key","App","state","fetchedData","setState","this","images","src","coronaImage","React","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.87ef0097.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__Hu8Kc\",\"card\":\"Cards_card__2Azku\",\"infected\":\"Cards_infected__2C4Ep\",\"recovered\":\"Cards_recovered__30j1Q\",\"deaths\":\"Cards_deaths__3sm39\"};","import React from 'react';\r\nimport styles from './Cards.module.css';\r\nimport { Grid, Card, Typography, CardContent } from '@material-ui/core';\r\nimport CountUp from 'react-countup';\r\nimport moment from 'moment';\r\nimport cx from 'classnames';\r\n\r\nconst Cards = (props) => {\r\n\r\n\r\n  console.log(props.data);\r\n\r\n\r\n  const { confirmed, recovered, deaths, lastUpdate } = props.data;\r\n\r\n  if (!confirmed) {\r\n    return <h1> Loading... </h1>;\r\n  }\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      <Grid container spacing={3} justify=\"center\">\r\n        <Grid\r\n          item\r\n          xs={12}\r\n          md={3}\r\n          item\r\n          component={Card}\r\n          className={cx(styles.card, styles.infected)}\r\n        >\r\n          <CardContent>\r\n            <Typography color=\"textSecondary\" gutterBottom>\r\n              Infected\r\n            </Typography>\r\n            <Typography variant=\"h5\">\r\n              {' '}\r\n              <CountUp\r\n                start={0}\r\n                end={confirmed.value}\r\n                duration={2.5}\r\n                seprator=\",\"\r\n              />{' '}\r\n            </Typography>\r\n            <Typography color=\"textSecondary\">\r\n              {moment(lastUpdate).calendar().toString()}\r\n            </Typography>\r\n            <Typography variant=\"body2\">\r\n              Number of Active cases of covid-19\r\n            </Typography>\r\n          </CardContent>\r\n        </Grid>\r\n\r\n        <Grid\r\n          item\r\n          xs={12}\r\n          md={3}\r\n          component={Card}\r\n          className={cx(styles.card, styles.recovered)}\r\n        >\r\n          <CardContent>\r\n            <Typography color=\"textSecondary\" gutterBottom>\r\n              Recovered\r\n            </Typography>\r\n            <Typography variant=\"h5\">\r\n              {' '}\r\n              <CountUp\r\n                start={0}\r\n                end={recovered.value}\r\n                duration={2.5}\r\n                seprator=\",\"\r\n              />{' '}\r\n            </Typography>\r\n            <Typography color=\"textSecondary\">\r\n              {moment(lastUpdate).calendar().toString()}\r\n            </Typography>\r\n            <Typography variant=\"body2\">\r\n              Number of recoveries of covid-19\r\n            </Typography>\r\n          </CardContent>\r\n        </Grid>\r\n\r\n        <Grid\r\n          item\r\n          xs={12}\r\n          md={3}\r\n          component={Card}\r\n          className={cx(styles.card, styles.deaths)}\r\n        >\r\n          <CardContent>\r\n            <Typography color=\"textSecondary\" gutterBottom>\r\n              Deaths\r\n            </Typography>\r\n            <Typography variant=\"h5\">\r\n              {' '}\r\n              <CountUp\r\n                start={0}\r\n                end={deaths.value}\r\n                duration={2.5}\r\n                seprator=\",\"\r\n              />{' '}\r\n            </Typography>\r\n            <Typography color=\"textSecondary\">\r\n              {moment(lastUpdate).calendar().toString()}\r\n            </Typography>\r\n            <Typography variant=\"body2\">\r\n              Number of deaths caused by covid-19\r\n            </Typography>\r\n          </CardContent>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Cards;\r\n","import axios from 'axios';\r\nimport { Card, CardContent, Typography, Grid } from '@material-ui/core';\r\n\r\nconst url = 'https://covid19.mathdro.id/api';\r\n\r\nexport const fetchData = async (country) => {\r\n\r\n  let changeAbleUrl = url ;\r\n\r\n  if ( country ){\r\n\r\n    changeAbleUrl = `${url}/countries/${country}` ;\r\n    console.log(country) ;\r\n\r\n  }\r\n\r\n  const response = await axios\r\n    .get(changeAbleUrl)\r\n    .then((resp) => {\r\n      return {\r\n        confirmed: resp.data.confirmed,\r\n        recovered: resp.data.recovered,\r\n        deaths: resp.data.deaths,\r\n        lastUpdate: resp.data.lastUpdate,\r\n      };\r\n    })\r\n    .catch((err) => {\r\n      console.log(err);\r\n\r\n      return {};\r\n    });\r\n \r\n    console.log('inside the fetch data' , response ) ;\r\n\r\n  return response;\r\n};\r\n\r\nexport const fetchDailyData = async () => {\r\n  try {\r\n    const response = await axios.get(`${url}/daily`);\r\n    //const response = await axios.get(url);\r\n    // console.log(response) ;\r\n    const modifiedData = response.data.map((dailyData) => ({\r\n      confirmed: dailyData.confirmed.total,\r\n      deaths: dailyData.deaths.total,\r\n      date: dailyData.reportDate,\r\n    }));\r\n\r\n    return modifiedData;\r\n  } catch (error) {\r\n    console.log(error);\r\n    return {};\r\n  }\r\n};\r\n\r\nexport const fetchCountries = async () => {\r\n  try {\r\n    const { data: { countries }} = await axios.get(`${url}/countries`);\r\n\r\n    // countries.map( country => console.log(country.name) ) ;\r\n\r\n    return countries.map((country) => country.name);\r\n  } catch (error) {\r\n    return {};\r\n  }\r\n};\r\n","import React, { useState, useEffect } from 'react';\r\nimport { fetchDailyData } from '../../api';\r\nimport { Line, Bar } from 'react-chartjs-2';\r\nimport { amber } from '@material-ui/core/colors';\r\nimport styles from './Chart.module.css' ;\r\n\r\nconst Chart = ( { data : { confirmed , deaths , recovered } , country } ) => {\r\n  const [dailyData, setdailyData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchApi = async () => {\r\n      setdailyData(await fetchDailyData());\r\n   //   console.log(dailyData) ;\r\n    };\r\n\r\n\r\n\r\n    fetchApi();\r\n  }, []);\r\n\r\n  const lineChart = dailyData.length  ? (\r\n    <Line\r\n      data={{\r\n        labels: dailyData.map(({ date }) =>  date ),\r\n        datasets: [{\r\n            data : dailyData.map( (data) => data.confirmed ) ,\r\n            label : 'Infected' ,\r\n            borderColor : '#3333ff' ,\r\n            fill : true  \r\n        }, {\r\n            data : dailyData.map( (data) => data.deaths) ,\r\n            label : 'Deaths' ,\r\n            borderColor : '#3333ff' ,\r\n            backgroundColor : 'rgba( 255 , 0 , 0 , 0.5 )' ,\r\n            fill : true            \r\n        }],\r\n      }}\r\n    />\r\n  ) : null;\r\n\r\n\r\n  \r\n\r\n\r\n  const barChart = (\r\n    confirmed ? (\r\n      <Bar\r\n        data={{\r\n          labels: ['Infected', 'Recovered', 'Deaths'],\r\n          datasets: [\r\n            {\r\n              label: 'People',\r\n              backgroundColor: ['rgba(0, 0, 255, 0.5)', 'rgba(0, 255, 0, 0.5)', 'rgba(255, 0, 0, 0.5)'],\r\n              data: [confirmed.value, recovered.value, deaths.value],\r\n            },\r\n          ],\r\n        }}\r\n        options={{\r\n          legend: { display: false },\r\n          title: { display: true, text: `Current state in ${country}` },\r\n        }}\r\n      />\r\n    ) : null\r\n  );\r\n\r\n  return (\r\n    <div className = {styles.container} >\r\n      { country ? barChart:  lineChart }\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chart;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { NativeSelect, FromControl, FormControl } from '@material-ui/core';\r\nimport styles from './CountryPicker.module.css';\r\nimport { fetchCountries } from '../../api';\r\n\r\nconst CountryPicker = ({ handleCountryChange }) => {\r\n  const [FetchedCountries, setFetchedCountries] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchApi = async () => {\r\n      setFetchedCountries(await fetchCountries());\r\n    };\r\n\r\n    fetchApi();\r\n  }, [setFetchedCountries]);\r\n\r\n  return (\r\n    <div>\r\n      <FormControl className={styles.formControl}>\r\n        <NativeSelect\r\n          defaultValue=\"\"\r\n          onChange={(e) => handleCountryChange(e.target.value)}\r\n        >\r\n          <option value=\"\">Global</option>\r\n          {FetchedCountries.map((country, i) => (\r\n            <option key={i} value={country}>\r\n              {' '}\r\n              {country}{' '}\r\n            </option>\r\n          ))}\r\n        </NativeSelect>\r\n      </FormControl>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CountryPicker;\r\n","import React, { Component } from 'react';\nimport Cards from './Components/Cards/Cards';\nimport Charts from './Components/Charts/Chart';\nimport CountryPicker from './Components/CountryPicker/CountryPicker';\nimport styles from './App.module.css';\nimport { fetchData } from './api';\nimport coronaImage from '../src/Images/image.png' ;\n\n\nclass App extends React.Component {\n\n  state = {\n     data : {} ,\n     country : ''\n  }\n\n\n  async componentDidMount() {\n    const fetchedData = await fetchData();\n\n //   console.log( fetchData , 'inside the component did mount' ) ;\n\n   this.setState( { data : fetchedData } ) ;     \n\n  }\n\n\n  handleCountryChange = async (country) => {\n\n      const fetchedData = await fetchData( country ) ;\n         \n      console.log('inside the fetched data' , fetchedData ) ;\n\n      this.setState({ data : fetchedData , country : country })\n\n      // console.log(country) ;\n\n  }\n\n  render() {\n\n\n     const { data , country } = this.state.data ? this.state.data : {} ;\n\n    return (\n      <div className={styles.container}>\n\n        <img className = {styles.images}  src = {coronaImage} />\n\n        <Cards  data = {this.state.data} />\n        <CountryPicker  handleCountryChange = {this.handleCountryChange} />\n        <Charts data = {this.state.data} country = {this.state.country} className = { styles.container } />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__2VOOl\",\"images\":\"App_images__25oVN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__IKqd6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__2FIpD\"};","module.exports = __webpack_public_path__ + \"static/media/image.d7265326.png\";"],"sourceRoot":""}